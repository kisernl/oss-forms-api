service: mayfly-forms-api

provider:
  name: aws
  runtime: python3.11
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 256
  timeout: 30
  environment:
    VALID_API_KEYS: ${env:VALID_API_KEYS}
    SES_DEFAULT_SENDER: ${env:SES_DEFAULT_SENDER, 'noreply@example.com'}
  
  # IAM role permissions
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource:
            - 'arn:aws:logs:*:*:*'
        - Effect: Allow
          Action:
            - ses:SendEmail
            - ses:SendRawEmail
            - ses:GetSendQuota
            - ses:GetSendStatistics
            - ses:ListVerifiedEmailAddresses
            - ses:GetIdentityVerificationAttributes
          Resource: '*'

functions:
  api:
    handler: lambda_function.lambda_handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-API-Key
            allowCredentials: false
      - http:
          path: /
          method: ANY
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-API-Key
            allowCredentials: false

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: false
    layer: false
    pythonBin: python3

package:
  patterns:
    - '!node_modules/**'
    - '!.git/**'
    - '!.pytest_cache/**'
    - '!__pycache__/**'
    - '!*.pyc'
    - '!.env'
    - '!README.md'